*******
Preface
*******

To get the best possible performance and efficiency out of multi-core CPUs in modern 
computer architectures, low-level and multi-threaded data reduction tools are developped and 
generally used from the command line. |terapix|_ and |astromatic|_ provide such open 
source low-level tools to the community for years now. 

The Youpi processing pipeline is an attempt to make an easy-to-use, high-level web application 
to handle common daily tasks such as ingesting FITS images into a database, organizing and 
preparing data for processing, running jobs on a cluster of machines, getting the results 
and generating reports.

Youpi acts as a glue between those low-level tools. Its development mainly focuses on 
providing a modern graphical user interface (GUI) and the ability to easily organize and 
share data between users.

Here is a very basic graph showing a general overview of Youpi's architecture:

.. image:: figures/youpi-arch.png

Youpi Features
==============

Youpi comes with helper tools to:

*Ingest FITS images*
    By providing a data path where Youpi will look for all `FITS` images, images header 
    information (metadata) is read and stored in the database. As we will see later, this 
    information is used in almost every part of the application, from image selection 
    to job submission on a cluster. Image ingestion is discussed later and has 
    a :ref:`dedicated section <ingestion_section>`.

*Organize image collections with tags*
    In order to be able to process a selection of images on a cluster, well, images have 
    to be selected first. Youpi provides an integrated :ref:`image selector <image_selector_section>` 
    widget to select images based on various criteria, mostly mapping the `FITS` image's header 
    keywords. But what if you need a more advanced, flexible way to select bunch of (possibly 
    unrelated) images? Youpi supports :ref:`applying tags <organize_tags_section>` --- that 
    is, simple, easy to remember names --- to image selections, making those annotated 
    selections easy to retrieve, at any time.

*Set up processing tasks*
    Youpi supports several type of processings that can be used with image selections. 
    The standard distribution provides plugins for :ref:`evaluating the quality <proc_fitsin>` 
    of an image, computing :ref:`astrometric and photometric solutions <proc_scamp>` for 
    a set of images, :ref:`resampling and co-adding <proc_swarp>` together images and building 
    :ref:`catalogues of objects <proc_sextractor>` from an astronomical image. There is 
    also a plugin for batch :ref:`converting FITS images to the TIFF format <proc_stiff>`.

    Each of those *processing tasks* can be accomplished within Youpi in a similar way, 
    by first making an image selection, selecting paths to external files such as 
    weight maps, flats or masks, then selecting a proper configuration file to use with 
    that processing and finally defining a directory where output data (products) 
    will be stored after processing.

*Define rules to match only subsets of a cluster*
    Maybe you don't plan or want to use all the cluster nodes available at a time. In 
    order to use a limited set of cluster nodes for a processing, Youpi provides flexible 
    solutions to :ref:`define selections of nodes<condor_setup>` you want to use. Those 
    selections can be saved and associated to a specific category of processings.

*Perform batch processing*
    In order to make it easier to work with images and processings on a survey, Youpi comes 
    with a :ref:`processing cart functionality <the_processing_cart>`, which works like 
    shopping carts found on traditional web shops: once the processing jobs are prepared, 
    they can be added to the processing cart and submitted to the cluster. Or they can be 
    saved for later processing and reloaded into the processing cart at any time. This is 
    also a nice way to share saved items with others: one can prepare the jobs while someone 
    else actually submit them and run then on the cluster. Jobs can be reordered or submitted 
    by groups. Jobs already successfully processed can even be skipped automatically by 
    Youpi, ensuring that only unprocessed jobs are effectively run on the cluster. 

*Monitor and kill jobs running on the cluster*
    Once jobs are submitted to the cluster from the processing cart, they can be monitored 
    in real time from the :ref:`live monitoring <live_monitoring>` control panel. Monitoring 
    jobs from Youpi gives greater detailled information than monitoring them with traditionnal 
    command line tools. Running jobs can easily be killed with a click.

*Access output results*
    A dedicated page is available for accessing :ref:`all output results <processing_results>`. 
    Results are sorted and can be filtered. Cluster logs are available from each result page 
    along with all input parameters used to submit the job. A job can be reprocessed at any time 
    in one click: it will be added automatically to the processing cart, with all its meta data 
    and input parameters.

*Get statistics and generate reports*
    Many :ref:`statistics and reports <reports>` are also available from the *reporting* page.


Organization of This Book
=========================

We will first introduce some material about the :doc:`installation <installation>`, 
configuration and software dependencies required to run Youpi.

In a second part, we will start a detailled :doc:`guided tour of the functionalities <tour>`, 
showing how the user interface is organized, whereas the details of image processing will 
be deeply discussed in the :doc:`processing images <processing>` part, with some examples 
and concrete cases.

As you will see, Youpi also comes with an admin interface that can be useful to manage 
users and groups and setting user permissions for restricting access. We will discuss 
those points in the :doc:`administration` part.

Since Youpi is open source software, we dedicate an :doc:`entire chapter <dive>` to 
developers wishing to contribute to Youpi by improving the code base or writting new 
plugins.

Finally, :doc:`faq` for both users and developers get a dedicated section.


Getting This Book
=================

Feel free to get a copy of this book from `Youpi's website`_. Both PDF and HTML file 
formats are available.

.. _Youpi's website: http://youpi.terapix.fr

