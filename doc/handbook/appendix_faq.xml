<appendix>
	<title>Frequently Asked Questions (&faq;)</title>
	<para>This is the Frequently Asked Questions section is split into two parts: user-related questions and 
	developer-related ones.
	</para>
	<sect1>
		<title>User &faq;</title>
	</sect1>
	<sect1>
		<title>Developper &faq;</title>
		<sect2>
			<title>I'm facing issues with foreign keys and integrity. How do I restart from scratch with 
			a clean DB, keeping all my data?
			</title>
			<para>
				<orderedlist>
					<listitem>First, let's set up some environment variables:
						<programlisting>
$ export _DBUSER=yulia _HOST=dbterapix _DB=youpi_yulia</programlisting>
					</listitem>
					<listitem>DO A FULL BACKUP OF YOUR DATA:
						<programlisting>
$ mysqldump -u${_DBUSER} -h${_HOST} -p ${_DB} \
--hex-blob --complete-insert \
> backup-full.sql</programlisting>
					</listitem>
					<listitem>Backup only the data from your database (not the SQL create statements):
						<programlisting>
$ mysqldump -u${_DBUSER} -h${_HOST} -p -t ${_DB} \
--hex-blob --complete-insert \
--ignore-table=${_DB}.auth_permission \
--ignore-table=${_DB}.django_content_type \
--ignore-table=${_DB}.django_site \
> backup-dataonly.sql</programlisting>
						<para>
							<itemizedlist>
								<listitem>The <code>-t</code> parameter instructs <command>mysqldump</command> to only dump 
								the data, not the instructions for creating the tables. 
								</listitem>
								<listitem>The <code>--complete-insert</code> parameter allows to write full INSERT statements 
								to the backup file, so we can guarranty future imports will behave as expected, with MySQL not 
								trying to insert bad data types into fields.
								</listitem>
								<listitem>Finally, the <code>--ignore-table</code> parameters are used to disable backup of 
								Django's tables <filename>auth_permission</filename>, <filename>django_content_type</filename> 
								and <filename>django_site</filename>. Those tables (and content) will be automatically created 
								by Django's <command>syncdb</command> command later.
								</listitem>
							</itemizedlist>
						</para>
					</listitem>
					<listitem>Empty the database. Connect to your MySQL server then issue the following 
					statements:
						<programlisting>
> drop database ${_DB};
> create database ${_DB};</programlisting>
					</listitem>
					<listitem>Reset the DB, reverting to a clean DB structure:
						<programlisting>
$ cd $YOUPISRC/terapix
$ python manage.py syncdb</programlisting>
						<para>This will create all the tables and indexes. Answer 'no' to the question about adding at least 
						one admin user. This is not required since every auth_* table information has been backed up at step 3 
						and will be reused.
						</para>
					</listitem>
					<listitem>Finally, import your previously saved data:
						<programlisting>
$ mysql -u${_DBUSER} -h${_HOST} -p ${_DB} &lt; backup-dataonly.sql</programlisting>
					</listitem>
				</orderedlist>
			</para>
		</sect2>
	</sect1>
</appendix>
